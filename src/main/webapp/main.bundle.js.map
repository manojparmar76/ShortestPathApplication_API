{"version":3,"sources":["D:/Workspace/my/ShortestPathApplication_UI/src/$_lazy_route_resource lazy","D:/Workspace/my/ShortestPathApplication_UI/src/app/app.component.css","D:/Workspace/my/ShortestPathApplication_UI/src/app/app.component.html","D:/Workspace/my/ShortestPathApplication_UI/src/app/app.component.ts","D:/Workspace/my/ShortestPathApplication_UI/src/app/app.module.ts","D:/Workspace/my/ShortestPathApplication_UI/src/app/constant/constant.ts","D:/Workspace/my/ShortestPathApplication_UI/src/app/service/api.service.ts","D:/Workspace/my/ShortestPathApplication_UI/src/environments/environment.ts","D:/Workspace/my/ShortestPathApplication_UI/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workspace/my/ShortestPathApplication_UI/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workspace/my/ShortestPathApplication_UI/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- Header start -->\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h1>Search Shortest Path</h1>\\r\\n  </div>\\r\\n  <!-- Header end -->\\r\\n  <div class=\\\"card\\\">\\r\\n    <!-- Content start -->\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form class=\\\"form-horizontal\\\" action=\\\"/action_page.php\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"Source\\\">Select Source:</label>\\r\\n          <select class=\\\"form-control\\\" id=\\\"Source\\\" [(ngModel)]=\\\"source\\\" name=\\\"source\\\">\\r\\n            <option *ngFor=\\\"let source of nodes; let i = index\\\" [value]=\\\"source.planetNode\\\">{{ source.planetNode }} - {{ source.planetName }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"Destination\\\">Select Destination:</label>\\r\\n          <select class=\\\"form-control\\\" id=\\\"Destination\\\" [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\">\\r\\n            <option *ngFor=\\\"let destination of nodes; let i = index\\\" [value]=\\\"destination.planetNode\\\">{{ destination.planetNode }} - {{ destination.planetName }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"checkbox\\\">\\r\\n            <label>\\r\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"traffic\\\" name=\\\"traffic\\\" /> Include Traffic</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"button\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"findPath()\\\">\\r\\n              Submit\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <!-- Content end -->\\r\\n  </div>\\r\\n\\r\\n  <!-- Result start -->\\r\\n  <div *ngIf=\\\"shortestPath.distance\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"path-details\\\">\\r\\n        <h4>\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h3>Path Result</h3>\\r\\n          </div>\\r\\n        </h4>\\r\\n        <div *ngIf=\\\"shortestPath.distance\\\">\\r\\n          <Label>Distance Between Nodes :\\r\\n            <strong>{{shortestPath.distance}}</strong>\\r\\n          </Label>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"shortestPath.traffic\\\">\\r\\n          <Label>Traffic Between Nodes :\\r\\n            <strong>{{shortestPath.traffic}}</strong>\\r\\n          </Label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <h3>Shortest Path</h3>\\r\\n      </div>\\r\\n      <div class=\\\"card-body result-body\\\">\\r\\n        <div class=\\\"col-md-12 block\\\" *ngFor=\\\"let node of shortestPath.nodes; let i = index;\\\">\\r\\n        <div class=\\\"circle\\\">\\r\\n          <p><strong>{{node}} - ({{shortestPath.planetNames[i]}})</strong></p>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 line-block\\\">\\r\\n          <div class=\\\"connecting-line\\\" id=\\\"connectingLine\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Result end -->\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workspace/my/ShortestPathApplication_UI/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\nimport { ApiService } from './service/api.service';\r\n\r\n@Component( {\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private apiService: ApiService) {\r\n      this.getNodes();\r\n  }\r\n\r\n  private source: String = '';\r\n  private destination: String = '';\r\n  private traffic: Boolean = false;\r\n\r\n  private nodes: Array < String >  = [];\r\n\r\n  private shortestPath: Object = {};\r\n\r\n  private getNodes() {\r\n    this.apiService.getCallback('planets').subscribe(response =>  {\r\n      if (response) {\r\n        if (response.message) {\r\n          alert('Message : ' + response.message);\r\n        } else if (response.length === 0) {\r\n          alert('Message : No node found in database, please upload graph first.');\r\n        } else {\r\n          this.nodes = response;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private findPath() {\r\n    if (this.source && this.destination) {\r\n      const payload: any =  {};\r\n      payload.source = this.source;\r\n      payload.destination = this.destination;\r\n      if (this.traffic) {\r\n        payload.withTraffic = this.traffic;\r\n      }\r\n      this.apiService.postCallback('shortestPath', payload).subscribe(response =>  {\r\n        if (response) {\r\n          if (response.message) {\r\n            alert('Message : ' + response.message);\r\n          } else {\r\n            this.shortestPath = response;\r\n            setTimeout(() => {\r\n              this.applyLines();\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private applyLines() {\r\n    const lastIndex = document.getElementsByClassName('block').length - 1;\r\n    if (lastIndex) {\r\n      const sourceOffset = document.getElementsByClassName('block')[0]['offsetTop'];\r\n      const destinationOffset = document.getElementsByClassName('block')[lastIndex]['offsetTop'];\r\n      const connectingLineHeight = destinationOffset - sourceOffset;\r\n      document.getElementById('connectingLine').style.height = connectingLineHeight + 10 + 'px';\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workspace/my/ShortestPathApplication_UI/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatCardModule\r\n} from '@angular/material';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ApiService } from './service/api.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [\r\n    ApiService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workspace/my/ShortestPathApplication_UI/src/app/app.module.ts","export const CONSTANT = {\r\n    hostURL: 'http://localhost:8080/ShortestPathApplication/',\r\n    headers: { 'accept': 'application/json', 'content-type': 'application/json' },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workspace/my/ShortestPathApplication_UI/src/app/constant/constant.ts","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { CONSTANT } from './../constant/constant';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n  public static errorEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private handleError(error: Error, type: string, url: string) {\r\n    const errorObj = { error: error, type: type, url: url };\r\n    console.log(errorObj);\r\n    alert('Error : ' + 'Something went wrong with API');\r\n    ApiService.errorEvent.emit(errorObj);\r\n  }\r\n\r\n  public getCallback(url: string): Observable<any> {\r\n    const finalUrl = CONSTANT.hostURL + url;\r\n    const httpHeaders = new HttpHeaders(CONSTANT.headers);\r\n\r\n    return this.http.get(finalUrl, { headers: httpHeaders })\r\n      .pipe(\r\n        tap(\r\n          response => {\r\n            return response;\r\n          },\r\n          error => {\r\n            this.handleError(error, 'GET', finalUrl);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  public postCallback(url: string, body?: Object): Observable<any> {\r\n    const finalUrl = CONSTANT.hostURL + url;\r\n    if (!body) {\r\n      body = {};\r\n    }\r\n    const httpHeaders = new HttpHeaders(CONSTANT.headers);\r\n\r\n    return this.http.post(finalUrl, body, { headers: httpHeaders })\r\n      .pipe(\r\n        tap(\r\n          response => {\r\n            return response;\r\n          },\r\n          error => {\r\n            this.handleError(error, 'POST', finalUrl);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workspace/my/ShortestPathApplication_UI/src/app/service/api.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workspace/my/ShortestPathApplication_UI/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workspace/my/ShortestPathApplication_UI/src/main.ts"],"sourceRoot":"webpack:///"}